{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\PostMaster\\\\poster\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { NavigationContainer, DefaultTheme as NavigationDefaultTheme, DarkTheme as NavigationDarkTheme } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { Provider as PaperProvider, DefaultTheme as PaperDefaultTheme, DarkTheme as PaperDarkTheme } from 'react-native-paper';\nimport { DrawerContent } from \"./screens/DrawerContent\";\nimport MainTabScreen from \"./screens/MainTabScreen\";\nimport SupportScreen from \"./screens/SupportScreen\";\nimport SettingsScreen from \"./screens/SettingsScreen\";\nimport BookmarkScreen from \"./screens/BookmarkScreen\";\nimport { AuthContext } from \"./components/context\";\nimport RootStackScreen from \"./screens/RootStackScreen\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar Drawer = createDrawerNavigator();\n\nvar App = function App() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isDarkTheme = _React$useState2[0],\n      setIsDarkTheme = _React$useState2[1];\n\n  var initialLoginState = {\n    isLoading: true,\n    userName: null,\n    userToken: null\n  };\n\n  var CustomDefaultTheme = _objectSpread(_objectSpread(_objectSpread({}, NavigationDefaultTheme), PaperDefaultTheme), {}, {\n    colors: _objectSpread(_objectSpread(_objectSpread({}, NavigationDefaultTheme.colors), PaperDefaultTheme.colors), {}, {\n      background: '#ffffff',\n      text: '#333333'\n    })\n  });\n\n  var CustomDarkTheme = _objectSpread(_objectSpread(_objectSpread({}, NavigationDarkTheme), PaperDarkTheme), {}, {\n    colors: _objectSpread(_objectSpread(_objectSpread({}, NavigationDarkTheme.colors), PaperDarkTheme.colors), {}, {\n      background: '#333333',\n      text: '#ffffff'\n    })\n  });\n\n  var theme = isDarkTheme ? CustomDarkTheme : CustomDefaultTheme;\n\n  var loginReducer = function loginReducer(prevState, action) {\n    switch (action.type) {\n      case 'RETRIEVE_TOKEN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'LOGIN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'LOGOUT':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: null,\n          userToken: null,\n          isLoading: false\n        });\n\n      case 'REGISTER':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false\n        });\n    }\n  };\n\n  var _React$useReducer = React.useReducer(loginReducer, initialLoginState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      loginState = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var authContext = React.useMemo(function () {\n    return {\n      signIn: function signIn(foundUser) {\n        var userToken, userName;\n        return _regeneratorRuntime.async(function signIn$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                userToken = String(foundUser[0].userToken);\n                userName = foundUser[0].username;\n                _context.prev = 2;\n                _context.next = 5;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem('userToken', userToken));\n\n              case 5:\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n\n              case 10:\n                dispatch({\n                  type: 'LOGIN',\n                  id: userName,\n                  token: userToken\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[2, 7]], Promise);\n      },\n      signOut: function signOut() {\n        return _regeneratorRuntime.async(function signOut$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(AsyncStorage.removeItem('userToken'));\n\n              case 3:\n                _context2.next = 8;\n                break;\n\n              case 5:\n                _context2.prev = 5;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 8:\n                dispatch({\n                  type: 'LOGOUT'\n                });\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[0, 5]], Promise);\n      },\n      signUp: function signUp() {},\n      toggleTheme: function toggleTheme() {\n        setIsDarkTheme(function (isDarkTheme) {\n          return !isDarkTheme;\n        });\n      }\n    };\n  }, []);\n  useEffect(function () {\n    setTimeout(function _callee() {\n      var userToken;\n      return _regeneratorRuntime.async(function _callee$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              userToken = null;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('userToken'));\n\n            case 4:\n              userToken = _context3.sent;\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.log(_context3.t0);\n\n            case 10:\n              dispatch({\n                type: 'RETRIEVE_TOKEN',\n                token: userToken\n              });\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[1, 7]], Promise);\n    }, 1000);\n  }, []);\n\n  if (loginState.isLoading) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(PaperProvider, {\n    theme: theme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, React.createElement(AuthContext.Provider, {\n    value: authContext,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    theme: theme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, loginState.userToken !== null ? React.createElement(Drawer.Navigator, {\n    drawerContent: function drawerContent(props) {\n      return React.createElement(DrawerContent, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 51\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"HomeDrawer\",\n    component: MainTabScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"SupportScreen\",\n    component: SupportScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"SettingsScreen\",\n    component: SettingsScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  })) : React.createElement(RootStackScreen, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["D:/PostMaster/poster/App.js"],"names":["React","useEffect","NavigationContainer","DefaultTheme","NavigationDefaultTheme","DarkTheme","NavigationDarkTheme","createDrawerNavigator","Provider","PaperProvider","PaperDefaultTheme","PaperDarkTheme","DrawerContent","MainTabScreen","SupportScreen","SettingsScreen","BookmarkScreen","AuthContext","RootStackScreen","AsyncStorage","Drawer","App","useState","isDarkTheme","setIsDarkTheme","initialLoginState","isLoading","userName","userToken","CustomDefaultTheme","colors","background","text","CustomDarkTheme","theme","loginReducer","prevState","action","type","token","id","useReducer","loginState","dispatch","authContext","useMemo","signIn","foundUser","String","username","setItem","console","log","signOut","removeItem","signUp","toggleTheme","setTimeout","getItem","flex","justifyContent","alignItems","props"],"mappings":"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","sourcesContent":["/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n *\n * @format\n * @flow\n */\n\nimport React, { useEffect } from 'react';\nimport { View, ActivityIndicator } from 'react-native';\nimport { \n  NavigationContainer, \n  DefaultTheme as NavigationDefaultTheme,\n  DarkTheme as NavigationDarkTheme\n} from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\n\nimport { \n  Provider as PaperProvider, \n  DefaultTheme as PaperDefaultTheme,\n  DarkTheme as PaperDarkTheme \n} from 'react-native-paper';\n\nimport { DrawerContent } from './screens/DrawerContent';\n\nimport MainTabScreen from './screens/MainTabScreen';\nimport SupportScreen from './screens/SupportScreen';\nimport SettingsScreen from './screens/SettingsScreen';\nimport BookmarkScreen from './screens/BookmarkScreen';\n\nimport { AuthContext } from './components/context';\n\nimport RootStackScreen from './screens/RootStackScreen';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Drawer = createDrawerNavigator();\n\nconst App = () => {\n  // const [isLoading, setIsLoading] = React.useState(true);\n  // const [userToken, setUserToken] = React.useState(null); \n\n  const [isDarkTheme, setIsDarkTheme] = React.useState(false);\n\n  const initialLoginState = {\n    isLoading: true,\n    userName: null,\n    userToken: null,\n  };\n\n  const CustomDefaultTheme = {\n    ...NavigationDefaultTheme,\n    ...PaperDefaultTheme,\n    colors: {\n      ...NavigationDefaultTheme.colors,\n      ...PaperDefaultTheme.colors,\n      background: '#ffffff',\n      text: '#333333'\n    }\n  }\n  \n  const CustomDarkTheme = {\n    ...NavigationDarkTheme,\n    ...PaperDarkTheme,\n    colors: {\n      ...NavigationDarkTheme.colors,\n      ...PaperDarkTheme.colors,\n      background: '#333333',\n      text: '#ffffff'\n    }\n  }\n\n  const theme = isDarkTheme ? CustomDarkTheme : CustomDefaultTheme;\n\n  const loginReducer = (prevState, action) => {\n    switch( action.type ) {\n      case 'RETRIEVE_TOKEN': \n        return {\n          ...prevState,\n          userToken: action.token,\n          isLoading: false,\n        };\n      case 'LOGIN': \n        return {\n          ...prevState,\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false,\n        };\n      case 'LOGOUT': \n        return {\n          ...prevState,\n          userName: null,\n          userToken: null,\n          isLoading: false,\n        };\n      case 'REGISTER': \n        return {\n          ...prevState,\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false,\n        };\n    }\n  };\n\n  const [loginState, dispatch] = React.useReducer(loginReducer, initialLoginState);\n\n  const authContext = React.useMemo(() => ({\n    signIn: async(foundUser) => {\n      // setUserToken('fgkj');\n      // setIsLoading(false);\n      const userToken = String(foundUser[0].userToken);\n      const userName = foundUser[0].username;\n      \n      try {\n        await AsyncStorage.setItem('userToken', userToken);\n      } catch(e) {\n        console.log(e);\n      }\n      // console.log('user token: ', userToken);\n      dispatch({ type: 'LOGIN', id: userName, token: userToken });\n    },\n    signOut: async() => {\n      // setUserToken(null);\n      // setIsLoading(false);\n      try {\n        await AsyncStorage.removeItem('userToken');\n      } catch(e) {\n        console.log(e);\n      }\n      dispatch({ type: 'LOGOUT' });\n    },\n    signUp: () => {\n      // setUserToken('fgkj');\n      // setIsLoading(false);\n    },\n    toggleTheme: () => {\n      setIsDarkTheme( isDarkTheme => !isDarkTheme );\n    }\n  }), []);\n\n  useEffect(() => {\n    setTimeout(async() => {\n      // setIsLoading(false);\n      let userToken;\n      userToken = null;\n      try {\n        userToken = await AsyncStorage.getItem('userToken');\n      } catch(e) {\n        console.log(e);\n      }\n      // console.log('user token: ', userToken);\n      dispatch({ type: 'RETRIEVE_TOKEN', token: userToken });\n    }, 1000);\n  }, []);\n\n  if( loginState.isLoading ) {\n    return(\n      <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\n        <ActivityIndicator size=\"large\"/>\n      </View>\n    );\n  }\n  return (\n    <PaperProvider theme={theme}>\n    <AuthContext.Provider value={authContext}>\n    <NavigationContainer theme={theme}>\n      { loginState.userToken !== null ? (\n        <Drawer.Navigator drawerContent={props => <DrawerContent {...props} />}>\n          <Drawer.Screen name=\"HomeDrawer\" component={MainTabScreen} />\n          <Drawer.Screen name=\"SupportScreen\" component={SupportScreen} />\n          <Drawer.Screen name=\"SettingsScreen\" component={SettingsScreen} />\n         \n        </Drawer.Navigator>\n      )\n    :\n      <RootStackScreen/>\n    }\n    </NavigationContainer>\n    </AuthContext.Provider>\n    </PaperProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}